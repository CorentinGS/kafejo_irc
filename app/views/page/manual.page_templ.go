// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package page

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Manual() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<article><h1>How I Work Best</h1><p class=\"subtitle\">Corentin GS - User Manual</p><section><p>This user manual provides insights into my work style, preferences, and communication style to help us collaborate effectively.</p><blockquote><p>Do or do not. There is no try</p><footer>Master Yoda, <cite>Empire Strikes Back</cite></footer></blockquote></section><section><h2>Work Style</h2><p>I work best in a personalized workspace that minimizes distractions. Ideally, I'd have a quiet, comfortable corner equipped with multiple monitors,  including an ultrawide, and the ability to surround myself with plants and personal items for a more inspiring environment. To maintain focus, I often rely on external stimuli such as music—especially jazz or classical—and enjoy using fidget toys like a Rubik's cube to stay engaged.  I'm also passionate about continuous learning, regularly seeking out documentation, online resources like websites and YouTube channels, and gaining insights from others' experiences through reading blogs and devlogs.</p><blockquote><p>Learn from the mistakes of others. You can't live long enough to make them all yourself</p><footer>Eleanor Roosevelt</footer></blockquote></section><section><h2>Communication</h2><p>I prefer asynchronous communication, with Slack or Discord channels being the most effective for me. When it comes to feedback, I appreciate receiving clear and concise rationales.  I favor brief messages with key discussion points over lengthy reviews, and I find code reviews with specific suggestions especially helpful.  While I enjoy open discussions, I value meetings that have a clearly defined goal from the start.</p><blockquote><p>The important thing is not to stop questioning. Curiosity has its own reason for existence.</p><footer>Albert Einstein</footer></blockquote></section><section><h2>Collaboration & Teamwork</h2><p>I welcome feedback at any stage of a project, but I find it especially useful during brainstorming sessions and just before code pushes.  While I appreciate public recognition for my contributions, I also value acknowledgment for the less tangible aspects of my work that may not be as easily measured.</p><blockquote><p>It's much more difficult to make a judgment on yourself than on anyone else.</p><footer>St Exupéry</footer></blockquote></section><section><h2>Schedule & Availability</h2><p>I work flexibly, adjusting my hours based on energy levels, typically between 9 a.m. and 11 p.m., and occasionally as late as 1 a.m., with short breaks throughout the day. Mornings are usually best for meetings, as I prefer to reserve my afternoons and evenings for focused, deep work. Additionally, I may need time for personal commitments, such as chess tournaments, so I appreciate consideration of this when scheduling.</p><blockquote><p>Tell me and I forget, teach me and I may remember, involve me and I learn.</p><footer>Benjamin Franklin</footer></blockquote></section><section><h2>Strengths & Weaknesses</h2><p>My strengths lie in problem-solving, a passion for initiating new projects, quick learning, and maintaining a growth mindset.  However, I find visual design (particularly UX/UI) to be a challenging area for me. As a Logician (INTP-T), my approach is analytical and focused on logic and creativity, often thriving in environments that value innovative thinking and problem-solving.</p><blockquote><p>When you see a good move, look for a better one.</p><footer>Emanuel Lasker</footer></blockquote></section><section><h2>Additional Information</h2><p>I'm passionate about chess and contributing to open-source projects.  In my free time, I enjoy movies, shows, and working on personal projects. Fairness and maintaining a healthy work-life balance are essential to me. My motivation stems from a desire to solve complex problems, innovate, explore new ideas, and experiment with cutting-edge technologies.</p><blockquote><p>All truth passes through three stages. First, it is ridiculed. Second, it is violently opposed. Third, it is accepted as being self-evident.</p><footer>Arthur Schopenhauer</footer></blockquote></section><section><h2>Additional Notes</h2><p>I thrive in a collaborative environment but also appreciate quiet time to focus, often with headphones on. Continuous learning is important to me, and I enjoy seeking out new resources and experiences to expand my knowledge.</p><blockquote><p>Some part of a mistake is always correct.</p><footer>Savielly Tartakover</footer></blockquote></section><section><h2>Disclaimer</h2><p>This is a lifetime work in progress, it might get updated from time to time.  This manual got inspired by the following : <a href=\"https://github.com/swyxio/README/blob/master/README.md\" target=\"_blank\">swyxio</a> and <a href=\"https://docs.google.com/presentation/d/1I8Y4oNkrh1Ass32PNyzBYp3hL4scLiH7YWQmwvKxzlM/edit#slide=id.gf57a4075db_0_0\">Steph Smith</a></p></section></article>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
